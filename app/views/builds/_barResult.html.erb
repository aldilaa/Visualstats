<%= will_paginate @builds %>

<!-- TESTING VISUALIZATION -->
<h1>Bar Diagram showing Builds and their result</h1>

<%= javascript_tag do %>

d3.json('', 
            function(data){
            
                var format = d3.time.format("%Y-%m-%dT%H:%M:%SZ");

                //parse time format correct
                data.forEach(function(d) {
                    console.log(d.finished_at);
                    d.finished_at = format.parse(d.finished_at);
                    console.log(d.finished_at);
                  });
                
                //format percent
                var formatPercent = d3.format(".0%");
              
                var margin = {top: 40, right: 40, bottom: 40, left: 40},
                width = 960,
                height = 800;

                var x = d3.time.scale()
                    .domain(d3.extent(data, function(d) { return d.finished_at; }))
                   .range([0, width - margin.right - margin.left]);

                var y = d3.scale.linear()
                    .domain(d3.extent(data, function(d) { return d.result; }))
                    .range([150, 0]);

                var xAxis = d3.svg.axis()
                    .scale(x)
                    .orient("bottom");

                var yAxis = d3.svg.axis()
                    .scale(y)
                    .orient("left")
                    .tickFormat(formatPercent);

                var svg = d3.select("body").append("svg")
                    .attr("width", width)
                    .attr("height", height)
                    .append("g")
                    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
     

                svg.append("g") // Render the axis by calling a <g> selection.
                    .attr("transform", "translate(0," + y.range()[0] + ")") //setzt x-achse an null punkt von y-achse
                    .attr("class", "x axis")
                    .call(xAxis)
                    .append("text")
                      .attr("transform", "translate(850)")
                      .attr("x", 8)
                      .attr("dx", "0.9em")
                      .style("text-anchor", "end")
                      .text("Finished at");   

                svg.append("g")
                    .attr("class", "y axis")
                    .call(yAxis)
                    .append("text")
                      .attr("transform", "rotate(-90)")
                      .attr("y", 8)
                      .attr("dy", "0.9em")
                      .style("text-anchor", "end")
                      .text("Result");

                svg.selectAll(".bar")
                    .data(data)
                    .enter().append("rect")
                    .attr("class", "bar")
                    .attr("x", function(d) { return x(d.finished_at); })
                    .attr("width",  80)
                    .attr("y", function(d) { console.log(d.result); return y(d.result); })
                    .attr("height", function(d) { return 150 - y(d.result); });

                //mouse over graph
                //show the commit_id                
                d3.selectAll(".bar")
                    .on('mouseover', function(d){
                        svg.append('text')
                        .attr("x", x(d.finished_at))
                        .attr("y", y(d.result))
                        .text(d.commit_id)
                        .attr('class','tip')
                        .style("font-size","1.5em")
                    })
                    .on('mouseout', function(d){
                        d3.selectAll(".tip").remove()
                    });              
            }); 
<% end %>