<%= javascript_include_tag 'map_script.js' %>

<%= javascript_tag do %>
var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-31401894-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
<% end %>
<%= javascript_tag do %>

var width = window.innerWidth-170,
    height = window.innerHeight-250,
    radius = 1,
    fill = d3.scale.category20();
   
   if(width<1200)
   {
   width=1200;
   }
   if(height<480)
   {
   height=480;
   }
var force = d3.layout.force()
    .charge(-width*3)
    .linkDistance(width/30)
    .size([width, height]);

var vis = d3.select("body").append("div")
    .style("width", width + "px")
    .style("height", height + "px");

d3.json("mapData.json", function(json) {
  var link = vis.selectAll("div.link")
      .data(json.links)
    .enter().append("div")
      .attr("class", "link");

  var node = vis.selectAll("div.node")
      .data(json.nodes)
    .enter().append("div")
      .attr("class", "node")
      .attr("text-anchor", "middle")
      .attr("display", function(d) { return d.name })
      .html(function(d) { 
      if(d.name=="<a target='_blank' href='https://github.com/cruxi/VisualStats' id='github'>Github<br /><img src= 'github.png' /></a>")
      {
       return "<p id='no_padding'>"+d.name+"</p>"
      }
      if(d.name=="#about")
      {
       return "<p id='no_padding1'>"+d.name+"</p>"
      }
      
      return "<p>"+d.name+"</p>";
      })
      .call(force.drag);
      

  force
      .nodes(json.nodes)
      .links(json.links)
      .on("tick", tick)
      .start();

  function tick() {
    node.style("left", function(d) { return (d.x = Math.max(radius, Math.min(width - radius, d.x))) + "px"; })
        .style("top", function(d) { return (d.y = Math.max(radius, Math.min(height - radius, d.y))) + "px"; });

    link.style("left", function(d) { return d.source.x + "px"; })
        .style("top", function(d) { return d.source.y + "px"; })
        .style("width", length)
        .style("-webkit-transform", transform)
        .style("-moz-transform", transform)
        .style("-ms-transform", transform)
        .style("-o-transform", transform)
        .style("transform", transform);
  }

  function transform(d) {
    return "rotate(" + Math.atan2(d.target.y - d.source.y, d.target.x - d.source.x) * 180 / Math.PI + "deg)";
  }

  function length(d) {
    var dx = d.target.x - d.source.x,
        dy = d.target.y - d.source.y;
    return Math.sqrt(dx * dx + dy * dy) + "px";
  }
});
<% end %>