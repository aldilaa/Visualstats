<!-- TESTING VISUALIZATION -->
<h1>Showing Jobs and their result in Calender-Form (in one page)</h1>

<%= javascript_tag do %>

            var day = d3.time.format("%w");
            var week = d3.time.format("%U");
            var percent = d3.format(".1%");
            var format = d3.time.format("%Y-%m-%dT%H:%M:%SZ"); 
            var format2 = d3.time.format("%Y-%m-%d");

            var cellSize = 17;                

            var color = d3.scale.quantize()
                .domain([1, 10])
                .range(d3.range(11).map(function(d) { return "q" + d + "-11"; }));
              
            var margin = {top: 40, right: 40, bottom: 40, left: 40},
                width = 960,
                height = 136;

            var svg = d3.select("body").selectAll("svg")
                .data(d3.range(2012,2014))
                .enter().append("svg")
                .attr("width", width)
                .attr("height", height)
                .attr("class", "RdYlGn")
                .append("g")
                .attr("transform", "translate(" + ((width - cellSize * 53) / 2) + "," + (height - cellSize * 7 - 1) + ")");


            svg.append("text")
                .attr("transform", "translate(-6," + cellSize * 3.5 + ")rotate(-90)")
                .style("text-anchor", "middle")
                .text(function(d) { return d; });

            var rect = svg.selectAll(".day")
                    .data(function(d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
                    .enter().append("rect")
                    .attr("class", "day")
                    .attr("width", cellSize)
                    .attr("height", cellSize)
                    .attr("x", function(d) { return week(d) * cellSize; })
                    .attr("y", function(d) { return day(d) * cellSize; })
                    .datum(format2);

                rect.append("title")
                    .text(function(d) { return d; });

                svg.selectAll(".month")
                    .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
                    .enter().append("path")
                    .attr("class", "month")
                    .attr("d", monthPath);

                
               var  allJobs = <%= raw JobCompact.all.to_json %>                                               
                        var nesteddata = d3.nest()
                            .key(function(d) { return format2(format.parse(d.finished_at)); })
                            .rollup(function(d) { 
                                return d
                                    .map(function(dd){ return dd.result})
                                    .reduce(function(prev, current, index, array){
                                        return prev + current;
                                    }) 
                            })
                            .map(allJobs);

                        console.log('nested',JSON.stringify(nesteddata))

                        rect.filter(function(d) { return d in nesteddata; })
                            .attr("class", function(d) { console.log('matched', color(nesteddata[d])); return "day " + color(nesteddata[d]); })
                            .select("title")
                            .text(function(d) {  return d + ": " +nesteddata[d]+" jobs succeed"; });
                   
                function monthPath(t0) {
                    var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),
                        d0 = +day(t0), w0 = +week(t0),
                        d1 = +day(t1), w1 = +week(t1);
                        return "M" + (w0 + 1) * cellSize + "," + d0 * cellSize
                        + "H" + w0 * cellSize + "V" + 7 * cellSize
                        + "H" + w1 * cellSize + "V" + (d1 + 1) * cellSize
                        + "H" + (w1 + 1) * cellSize + "V" + 0
                        + "H" + (w0 + 1) * cellSize + "Z";
                }

                d3.select(self.frameElement).style("height", "2910px");  
<% end %>